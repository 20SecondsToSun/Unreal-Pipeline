def ColorFromBuildResuult(result){
    if("${result}" == 'SUCCESS') return '#18A558'
    if("${result}" == 'ABORTED') return '#6e6e6e'
    if("${result}" == 'UNSTABLE') return '#fcba03'
    return '#FF0000'
}

pipeline {
    agent {
        node {
            label ""
            customWorkspace "$BUILD_DIR"
        }
    }

    parameters {
        choice name: 'CONFIG', choices: ['Development', 'Shipping', 'DebugGame'], description: 'Build configuration'
        choice name: 'PLATFORM', choices: ['Win64', 'Android', 'Linux'], description: 'Build platform'
        string name: 'GIT_BRANCH', defaultValue: 'master'
    }

    /* environment {
        GIT_URL1 = 'https://github.com/life-exe/UnrealTPSGame'
        GIT_CREDENTIALS = 'life-exe-github'
        UAT_PATH = 'C:\\Epic Games\\UE Binary\\UE_5.0\\Engine\\Build\\BatchFiles\\RunUAT.bat'
        PROJECT_PATH = "$BUILD_DIR\\TPS.uproject"
        // ARCHIVE_PATH = "c:\\JenkinsJobs\\Artifacts\\$JOB_NAME\\$BUILD_NUMBER"
        ARCHIVE_PATH = "$BUILD_DIR\\Build"
        BUILD_FLAGS = '-build -cook -package -stage -archive -pak -allmaps'
        ZIP_DIR = "Build\\**\\*.*"
        SLACK_CHANNEL = 'tps-game-builds'
    }*/

    stages {
        stage('Git clone') {
            steps {
                slackSend channel: "$SLACK_CHANNEL",
                    color: "$currentBuild.previousBuild" == 'null' ? '#18A558' :
                    ColorFromBuildResuult("$currentBuild.previousBuild.result"),
                    message:"Build started: ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"

                checkout([$class: 'GitSCM',
                    branches: [[name: '$GIT_BRANCH']],
                    // extensions: [[$class: 'CleanBeforeCheckout']],
                    userRemoteConfigs: [[credentialsId: "$GIT_CREDENTIALS",
                    url: "$GIT_URL1"]]])
            }
        }
        stage('Build') {
            steps {
                bat '''
                    "%UAT_PATH%" BuildCookRun ^
                    -project="%PROJECT_PATH%" ^
                    -platform="%PLATFORM%" ^
                    -clientconfig="%CONFIG%" ^
                    -archivedirectory="%ARCHIVE_PATH%" ^
                    %BUILD_FLAGS%
                '''
            }
        }
        stage('Archive artifacts') {
            steps {
                archiveArtifacts artifacts: "$ZIP_DIR"
            }
        }
    }

    post{
        always{
            slackSend channel: "$SLACK_CHANNEL",
                color: ColorFromBuildResuult("$currentBuild.currentResult"),
                message:"Build $currentBuild.currentResult: ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
        }
    }
}

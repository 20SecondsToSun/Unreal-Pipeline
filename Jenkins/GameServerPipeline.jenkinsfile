def slackNotify(message, color) {
    slackSend color: "${color}", message: "${message}"
}

def getcolorByBuildStatus(buildStatus){
    def color = 'danger'
    if (buildStatus == 'SUCCESS') {
        color = 'good'
    } else if (buildStatus == 'UNSTABLE') {
        color = 'warning'
    }
    return color
}

pipeline {
    agent {
        node {
          label ""
          customWorkspace "${params.DIRECTORY}"
        }
    }
    environment {
        ARCHIVE_DIR = "${params.PACKAGE_PATH}\\${env.JOB_NAME}\\${env.BUILD_NUMBER}"
    }
    stages {
        stage('Git') {
            steps {
                wrap([$class: 'BuildUser']) {
                    slackNotify("${env.JOB_NAME} - #${env.BUILD_NUMBER} Started by user ${env.BUILD_USER}", 'good')
                }
                checkout([$class: 'GitSCM', branches: [[name: "${params.GIT_BRANCH}"]], userRemoteConfigs: [[credentialsId: "${params.GIT_CREDENTIAL}", url: "${params.GIT_URL}"]]])
            }
        }
        stage('Build') {
            environment {
                PROJECT_PATH = "${params.DIRECTORY}\\${params.UE_PROJECT_NAME}.uproject"
                BAT_PATH = "${params.UE_PATH}\\Engine\\Build\\BatchFiles\\RunUAT.bat"
            }
            steps {
                bat """
                    "$BAT_PATH" BuildCookRun -project="$PROJECT_PATH" -platform=${params.PLATFORM} -archivedirectory="$ARCHIVE_DIR" -ServerConfig=${params.SERVER_CONFIG} ${params.BUILD_ARGS} -server -noclient
                """
            }
        }
    }
    post { 
        success {
            bat """
                ren "$ARCHIVE_DIR\\WindowsServer" Server
            """
        }       
        always {           
            wrap([$class: 'BuildUser']) {
                slackNotify("${env.JOB_NAME} - #${env.BUILD_NUMBER} ${currentBuild.currentResult}", getcolorByBuildStatus("${currentBuild.currentResult}"))
    		}
        }
    }
}

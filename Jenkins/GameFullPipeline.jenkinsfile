pipeline {
    agent {
        node {
          label "UE_TESTS"
          customWorkspace "${params.DIRECTORY}"
        }
    }
    stages {
        stage('Git') {
            environment {
              SLACK_MESSAGE = "${env.JOB_NAME} - #${env.BUILD_NUMBER} Started"
            }
            steps {
                wrap([$class: 'BuildUser']) {
                    slackSend color: '#2eb886', message: "${env.JOB_NAME} - #${env.BUILD_NUMBER} Started by user ${env.BUILD_USER}"
                }
                checkout([$class: 'GitSCM', branches: [[name: "${params.GIT_BRANCH}"]], userRemoteConfigs: [[credentialsId: "${params.GIT_CREDENTIAL}", url: "${params.GIT_URL}"]]])
            }
        }
        stage('Build') {
            environment {
                PROJECT_PATH = "${params.DIRECTORY}\\${params.UE_PROJECT_NAME}.uproject"
                ARCHIVE_DIR = "${params.PACKAGE_PATH}\\${env.JOB_NAME}\\${env.BUILD_NUMBER}"
                BAT_PATH = "${params.UE_PATH}\\Engine\\Build\\BatchFiles\\RunUAT.bat"
            }
            steps {
                bat """
                    "$BAT_PATH" BuildCookRun -project="$PROJECT_PATH" -platform=${params.PLATFORM} -archivedirectory="$ARCHIVE_DIR" -ClientConfig=${params.GAME_CONFIG} -ServerConfig=${params.GAME_CONFIG} -server ${params.BUILD_ARGS}
                """
            }
        }
        stage('Tests') {
           environment {
                PROJECT_PATH = "${params.DIRECTORY}\\${params.UE_PROJECT_NAME}.uproject"
                LOG_PATH = "${params.DIRECTORY}\\TestResults\\RunTests.log"
                EDITOR_PATH = "${params.UE_PATH}\\Engine\\Binaries\\Win64\\UE4Editor.exe"
                TEST_REPORT_PATH = "${params.DIRECTORY}\\TestResults"
                CONVERTER_PATH = "${params.DIRECTORY}\\Scripts\\ue_to_junit.py"
                UE_TESTS_PATH = "${params.DIRECTORY}\\TestResults\\index.json"
                JUNIT_TESTS_PATH = "${params.DIRECTORY}\\TestResults\\unreal_unittests.xml"
            }
            steps {
                bat """
                    "$EDITOR_PATH" "$PROJECT_PATH" -ExecCmds="Automation RunTests ${params.TEST_NAMES}" -testexit="Automation Test Queue Empty" -log="$LOG_PATH" -ReportOutputPath="$TEST_REPORT_PATH" -nopause
                """
                sh 'python "$CONVERTER_PATH" --json="$UE_TESTS_PATH" --out="$JUNIT_TESTS_PATH"'
            }
        }
    }
    post {
        always {
            junit 'TestResults\\*.xml'
        }
        success {
    		wrap([$class: 'BuildUser']) {
    			slackSend color: 'good', message: "${env.JOB_NAME} - #${env.BUILD_NUMBER} Success"
    		}
        }
            
        failure {
    		wrap([$class: 'BuildUser']) {
    			slackSend color: 'bad', message: "${env.JOB_NAME} - #${env.BUILD_NUMBER} Failure"
    		}
        }
    }
}
